%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Thu Mar 14 17:45:28 2013
%%Title: /home/ed/masters/Electronics/eStop_remote/remote.sch
%%Author: (null)
%%BoundingBox: 0 0 1224 792
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
49500 49100 49200 49100 10 line
gsave
false true false false 234.000000 [(AD0 / DIO0 / Commisioning Button) ] 0 49145 49095 162.500000 text
grestore
gsave
false false false false 260.000000 [(20) ] 0 49295 49145 180.555557 text
grestore
45800 45500 46100 45500 10 line
gsave
false false false false 234.000000 [(GND) ] 0 46155 45495 162.500000 text
grestore
gsave
false true false false 260.000000 [(10) ] 0 46005 45545 180.555557 text
grestore
45800 45900 46100 45900 10 line
gsave
false false false false 234.000000 [(\\_DTR\\_ / SLEEP_RQ / DIO8) ] 0 46155 45895 162.500000 text
grestore
gsave
false true false false 260.000000 [(9) ] 0 46005 45945 180.555557 text
grestore
45800 46700 46100 46700 10 line
gsave
false false false false 234.000000 [(DIO11) ] 0 46155 46695 162.500000 text
grestore
gsave
false true false false 260.000000 [(7) ] 0 46005 46745 180.555557 text
grestore
45800 47100 46100 47100 10 line
gsave
false false false false 234.000000 [(RSSI PWM / DIO10) ] 0 46155 47095 162.500000 text
grestore
gsave
false true false false 260.000000 [(6) ] 0 46005 47145 180.555557 text
grestore
45800 47500 46100 47500 10 line
gsave
false false false false 234.000000 [(\\_RESET\\_) ] 0 46155 47495 162.500000 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 46005 47545 180.555557 text
grestore
45800 47900 46100 47900 10 line
gsave
false false false false 234.000000 [(DIO12) ] 0 46155 47895 162.500000 text
grestore
gsave
false true false false 260.000000 [(4) ] 0 46005 47945 180.555557 text
grestore
45800 46300 46100 46300 10 line
gsave
false false false false 234.000000 [(RESERVED) ] 0 46155 46295 162.500000 text
grestore
gsave
false true false false 260.000000 [(8) ] 0 46005 46345 180.555557 text
grestore
46100 45400 49200 45400 10 line
49200 45400 49200 49300 10 line
49200 49300 46100 49300 10 line
46100 49300 46100 45400 10 line
45800 48300 46100 48300 10 line
gsave
false false false false 234.000000 [(DIN / \\_CONFIG\\_) ] 0 46155 48295 162.500000 text
grestore
gsave
false true false false 260.000000 [(3) ] 0 46005 48345 180.555557 text
grestore
45800 48700 46100 48700 10 line
gsave
false false false false 234.000000 [(DOUT) ] 0 46155 48695 162.500000 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 46005 48745 180.555557 text
grestore
45800 49100 46100 49100 10 line
gsave
false false false false 234.000000 [(VCC) ] 0 46155 49095 162.500000 text
grestore
gsave
false true false false 260.000000 [(1) ] 0 46005 49145 180.555557 text
grestore
49500 48700 49200 48700 10 line
gsave
false true false false 234.000000 [(AD1 / DIO1) ] 0 49145 48695 162.500000 text
grestore
gsave
false false false false 260.000000 [(19) ] 0 49295 48745 180.555557 text
grestore
49500 48300 49200 48300 10 line
gsave
false true false false 234.000000 [(AD2 / DIO2) ] 0 49145 48295 162.500000 text
grestore
gsave
false false false false 260.000000 [(18) ] 0 49295 48345 180.555557 text
grestore
49500 47900 49200 47900 10 line
gsave
false true false false 234.000000 [(AD3 / DIO3) ] 0 49145 47895 162.500000 text
grestore
gsave
false false false false 260.000000 [(17) ] 0 49295 47945 180.555557 text
grestore
49500 47500 49200 47500 10 line
gsave
false true false false 234.000000 [(\\_RTS\\_ / DIO6) ] 0 49145 47495 162.500000 text
grestore
gsave
false false false false 260.000000 [(16) ] 0 49295 47545 180.555557 text
grestore
49500 47100 49200 47100 10 line
gsave
false true false false 234.000000 [(Associate / DIO5) ] 0 49145 47095 162.500000 text
grestore
gsave
false false false false 260.000000 [(15) ] 0 49295 47145 180.555557 text
grestore
49500 46700 49200 46700 10 line
gsave
false true false false 234.000000 [(VREF) ] 0 49145 46695 162.500000 text
grestore
gsave
false false false false 260.000000 [(14) ] 0 49295 46745 180.555557 text
grestore
49500 45500 49200 45500 10 line
gsave
false true false false 234.000000 [(DIO4) ] 0 49145 45495 162.500000 text
grestore
gsave
false false false false 260.000000 [(11) ] 0 49295 45545 180.555557 text
grestore
49500 45900 49200 45900 10 line
gsave
false true false false 234.000000 [(\\_CTS\\_ / DIO7) ] 0 49145 45895 162.500000 text
grestore
gsave
false false false false 260.000000 [(12) ] 0 49295 45945 180.555557 text
grestore
49500 46300 49200 46300 10 line
gsave
false true false false 234.000000 [(ON / \\_SLEEP\\_) ] 0 49145 46295 162.500000 text
grestore
gsave
false false false false 260.000000 [(13) ] 0 49295 46345 180.555557 text
grestore
gsave
false false false false 260.000000 [(XBEE) ] 0 46100 49400 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(U1) ] 0 48995 49400 180.555557 text
grestore
gsave
42200 47200 42200 47400 10 line
42100 47200 42300 47200 10 line
42155 47150 42245 47150 10 line
42180 47110 42220 47110 10 line
grestore
gsave
45300 46200 45300 46400 10 line
45300 47100 45300 46900 10 line
45100 46600 45500 46600 10 line
45100 46700 45500 46700 10 line
45300 46900 45300 46700 10 line
45300 46600 45300 46400 10 line
grestore
gsave
false true false true 260.000000 [(C1) ] 0 44900 46900 180.555557 text
grestore
gsave
false false false false 260.000000 [(0.1uF) ] 0 44500 46500 180.555557 text
grestore
45800 49100 45300 49100 10 line
45300 49100 45300 47100 10 line
45800 45500 45300 45500 10 line
45300 45500 45300 46200 10 line
45800 47500 45300 47500 10 line
gsave
45300 45300 45300 45500 10 line
45200 45300 45400 45300 10 line
45255 45250 45345 45250 10 line
45280 45210 45320 45210 10 line
grestore
gsave
55600 49300 55600 49100 10 line
gsave
false true false false 208.000000 [(1) ] 270 55650 49150 144.444443 text
grestore
55600 48400 55600 48600 10 line
gsave
false false false false 208.000000 [(2) ] 270 55650 48550 144.444443 text
grestore
55700 48900 55600 48800 10 line
55600 48800 55500 48900 10 line
55700 48900 55500 48900 10 line
55700 48800 55500 48800 10 line
55600 48800 55600 48600 10 line
55600 48900 55600 49100 10 line
55600 48850 200 0 360 10 darc
55903 48784 56004 48683 10 line
56004 48683 55955 48679 10 line
55955 48679 56057 48578 10 line
55818 48816 55918 48715 10 line
55918 48715 55869 48711 10 line
55869 48711 55970 48610 10 line
grestore
gsave
false false false false 260.000000 [(SOFT_LED) ] 0 55900 48900 180.555557 text
grestore
gsave
55500 49900 55700 49800 10 line
55700 49800 55500 49700 10 line
55500 49700 55700 49600 10 line
55700 49600 55500 49500 10 line
55500 49900 55700 50000 10 line
55700 50000 55600 50050 10 line
55600 50200 55600 50050 10 line
55600 49300 55600 49452 10 line
55500 49501 55600 49450 10 line
grestore
gsave
false true false true 260.000000 [(R5) ] 0 56100 50000 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 55900 49600 180.555557 text
grestore
gsave
55600 48400 55600 48200 10 line
gsave
false false false false 156.000000 [(3) ] 0 55500 48250 108.333336 text
grestore
55600 47600 55600 47400 10 line
gsave
false false false false 156.000000 [(1) ] 0 55500 47450 108.333336 text
grestore
55500 47901 316 0 360 10 darc
55600 47600 55400 47800 10 line
55600 48200 55400 48000 10 line
55400 48100 55400 47700 10 line
55000 47900 55184 47900 10 line
gsave
false false false false 156.000000 [(2) ] 0 55100 47950 108.333336 text
grestore
55400 47900 55184 47900 10 line
55600 47600 55564 47672 10 line
55600 47600 55528 47636 10 line
55528 47636 55564 47672 10 line
grestore
gsave
false false false false 260.000000 [(Q2) ] 0 55900 47900 180.555557 text
grestore
gsave
55600 47200 55600 47400 10 line
55500 47200 55700 47200 10 line
55555 47150 55645 47150 10 line
55580 47110 55620 47110 10 line
grestore
gsave
54700 48000 54600 47800 10 line
54600 47800 54500 48000 10 line
54500 48000 54400 47800 10 line
54400 47800 54300 48000 10 line
54700 48000 54800 47800 10 line
54800 47800 54850 47900 10 line
55000 47900 54850 47900 10 line
54100 47900 54252 47900 10 line
54301 48000 54250 47900 10 line
grestore
gsave
false false false false 260.000000 [(R6) ] 0 54300 48100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 54300 47600 180.555557 text
grestore
gsave
55600 45600 55600 45400 10 line
gsave
false true false false 208.000000 [(1) ] 270 55650 45450 144.444443 text
grestore
55600 44700 55600 44900 10 line
gsave
false false false false 208.000000 [(2) ] 270 55650 44850 144.444443 text
grestore
55700 45200 55600 45100 10 line
55600 45100 55500 45200 10 line
55700 45200 55500 45200 10 line
55700 45100 55500 45100 10 line
55600 45100 55600 44900 10 line
55600 45200 55600 45400 10 line
55600 45150 200 0 360 10 darc
55903 45084 56004 44983 10 line
56004 44983 55955 44979 10 line
55955 44979 56057 44878 10 line
55818 45116 55918 45015 10 line
55918 45015 55869 45011 10 line
55869 45011 55970 44910 10 line
grestore
gsave
false false false false 260.000000 [(REM_LED) ] 0 55900 45200 180.555557 text
grestore
gsave
55500 46200 55700 46100 10 line
55700 46100 55500 46000 10 line
55500 46000 55700 45900 10 line
55700 45900 55500 45800 10 line
55500 46200 55700 46300 10 line
55700 46300 55600 46350 10 line
55600 46500 55600 46350 10 line
55600 45600 55600 45752 10 line
55500 45801 55600 45750 10 line
grestore
gsave
false true false true 260.000000 [(R10) ] 0 56100 46300 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 55900 45900 180.555557 text
grestore
gsave
55600 44700 55600 44500 10 line
gsave
false false false false 156.000000 [(3) ] 0 55500 44550 108.333336 text
grestore
55600 43900 55600 43700 10 line
gsave
false false false false 156.000000 [(1) ] 0 55500 43750 108.333336 text
grestore
55500 44201 316 0 360 10 darc
55600 43900 55400 44100 10 line
55600 44500 55400 44300 10 line
55400 44400 55400 44000 10 line
55000 44200 55184 44200 10 line
gsave
false false false false 156.000000 [(2) ] 0 55100 44250 108.333336 text
grestore
55400 44200 55184 44200 10 line
55600 43900 55564 43972 10 line
55600 43900 55528 43936 10 line
55528 43936 55564 43972 10 line
grestore
gsave
false false false false 260.000000 [(Q4) ] 0 55900 44200 180.555557 text
grestore
gsave
55600 43500 55600 43700 10 line
55500 43500 55700 43500 10 line
55555 43450 55645 43450 10 line
55580 43410 55620 43410 10 line
grestore
gsave
52600 49300 52600 49100 10 line
gsave
false true false false 208.000000 [(1) ] 270 52650 49150 144.444443 text
grestore
52600 48400 52600 48600 10 line
gsave
false false false false 208.000000 [(2) ] 270 52650 48550 144.444443 text
grestore
52700 48900 52600 48800 10 line
52600 48800 52500 48900 10 line
52700 48900 52500 48900 10 line
52700 48800 52500 48800 10 line
52600 48800 52600 48600 10 line
52600 48900 52600 49100 10 line
52600 48850 200 0 360 10 darc
52903 48784 53004 48683 10 line
53004 48683 52955 48679 10 line
52955 48679 53057 48578 10 line
52818 48816 52918 48715 10 line
52918 48715 52869 48711 10 line
52869 48711 52970 48610 10 line
grestore
gsave
false false false false 260.000000 [(BUT_LED) ] 0 52900 48900 180.555557 text
grestore
gsave
52500 49900 52700 49800 10 line
52700 49800 52500 49700 10 line
52500 49700 52700 49600 10 line
52700 49600 52500 49500 10 line
52500 49900 52700 50000 10 line
52700 50000 52600 50050 10 line
52600 50200 52600 50050 10 line
52600 49300 52600 49452 10 line
52500 49501 52600 49450 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 53100 50000 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 52900 49600 180.555557 text
grestore
gsave
52600 48400 52600 48200 10 line
gsave
false false false false 156.000000 [(3) ] 0 52500 48250 108.333336 text
grestore
52600 47600 52600 47400 10 line
gsave
false false false false 156.000000 [(1) ] 0 52500 47450 108.333336 text
grestore
52500 47901 316 0 360 10 darc
52600 47600 52400 47800 10 line
52600 48200 52400 48000 10 line
52400 48100 52400 47700 10 line
52000 47900 52184 47900 10 line
gsave
false false false false 156.000000 [(2) ] 0 52100 47950 108.333336 text
grestore
52400 47900 52184 47900 10 line
52600 47600 52564 47672 10 line
52600 47600 52528 47636 10 line
52528 47636 52564 47672 10 line
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 52900 47900 180.555557 text
grestore
gsave
52600 47200 52600 47400 10 line
52500 47200 52700 47200 10 line
52555 47150 52645 47150 10 line
52580 47110 52620 47110 10 line
grestore
gsave
51700 48000 51600 47800 10 line
51600 47800 51500 48000 10 line
51500 48000 51400 47800 10 line
51400 47800 51300 48000 10 line
51700 48000 51800 47800 10 line
51800 47800 51850 47900 10 line
52000 47900 51850 47900 10 line
51100 47900 51252 47900 10 line
51301 48000 51250 47900 10 line
grestore
gsave
false false false false 260.000000 [(R3) ] 0 51300 48100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 51300 47600 180.555557 text
grestore
gsave
52600 45000 52600 44800 10 line
gsave
false true false false 208.000000 [(1) ] 270 52650 44850 144.444443 text
grestore
52600 44100 52600 44300 10 line
gsave
false false false false 208.000000 [(2) ] 270 52650 44250 144.444443 text
grestore
52700 44600 52600 44500 10 line
52600 44500 52500 44600 10 line
52700 44600 52500 44600 10 line
52700 44500 52500 44500 10 line
52600 44500 52600 44300 10 line
52600 44600 52600 44800 10 line
52600 44550 200 0 360 10 darc
52903 44484 53004 44383 10 line
53004 44383 52955 44379 10 line
52955 44379 53057 44278 10 line
52818 44516 52918 44415 10 line
52918 44415 52869 44411 10 line
52869 44411 52970 44310 10 line
grestore
gsave
false false false false 260.000000 [(IRC5_LED) ] 0 51500 44500 180.555557 text
grestore
gsave
52500 45600 52700 45500 10 line
52700 45500 52500 45400 10 line
52500 45400 52700 45300 10 line
52700 45300 52500 45200 10 line
52500 45600 52700 45700 10 line
52700 45700 52600 45750 10 line
52600 45900 52600 45750 10 line
52600 45000 52600 45152 10 line
52500 45201 52600 45150 10 line
grestore
gsave
false true false true 260.000000 [(R7) ] 0 53100 45700 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 52900 45300 180.555557 text
grestore
gsave
52600 44100 52600 43900 10 line
gsave
false false false false 156.000000 [(3) ] 0 52500 43950 108.333336 text
grestore
52600 43300 52600 43100 10 line
gsave
false false false false 156.000000 [(1) ] 0 52500 43150 108.333336 text
grestore
52500 43601 316 0 360 10 darc
52600 43300 52400 43500 10 line
52600 43900 52400 43700 10 line
52400 43800 52400 43400 10 line
52000 43600 52184 43600 10 line
gsave
false false false false 156.000000 [(2) ] 0 52100 43650 108.333336 text
grestore
52400 43600 52184 43600 10 line
52600 43300 52564 43372 10 line
52600 43300 52528 43336 10 line
52528 43336 52564 43372 10 line
grestore
gsave
false false false false 260.000000 [(Q3) ] 0 52900 43600 180.555557 text
grestore
gsave
52600 42900 52600 43100 10 line
52500 42900 52700 42900 10 line
52555 42850 52645 42850 10 line
52580 42810 52620 42810 10 line
grestore
gsave
51700 43700 51600 43500 10 line
51600 43500 51500 43700 10 line
51500 43700 51400 43500 10 line
51400 43500 51300 43700 10 line
51700 43700 51800 43500 10 line
51800 43500 51850 43600 10 line
52000 43600 51850 43600 10 line
51100 43600 51252 43600 10 line
51301 43700 51250 43600 10 line
grestore
gsave
false false false false 260.000000 [(R8) ] 0 51300 43800 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 51300 43300 180.555557 text
grestore
51100 47900 50600 47900 10 line
50600 47900 50600 48700 10 line
50600 48700 49500 48700 10 line
49500 48300 50400 48300 10 line
50400 46800 50400 48300 10 line
50400 46800 54100 46800 10 line
54100 46800 54100 47900 10 line
49500 47900 50200 47900 10 line
50200 43300 50200 47900 10 line
50200 46600 53700 46600 10 line
49500 45500 51100 45500 10 line
51100 45500 51100 43600 10 line
gsave
46400 43800 46400 43950 10 line
gsave
false false false false 208.000000 [(1) ] 90 46350 43850 144.444443 text
grestore
46400 44650 46400 44800 10 line
gsave
false false false false 208.000000 [(2) ] 90 46350 44700 144.444443 text
grestore
46400 43950 46400 44125 10 line
46400 44650 46400 44475 10 line
46315 44100 46315 44500 10 line
46400 44139 14 0 360 10 darc
46400 44462 14 0 360 10 darc
46145 44270 46145 44320 10 line
46195 44270 46195 44320 10 line
46195 44270 46245 44295 10 line
46195 44320 46245 44295 10 line
46195 44295 46145 44295 10 line
46245 44295 46314 44295 10 line
grestore
gsave
false true false true 260.000000 [(STOP) ] 0 46100 44400 180.555557 text
grestore
54700 44200 55000 44200 10 line
53800 44200 53700 44200 10 line
53700 44200 53700 46600 10 line
gsave
54400 44300 54300 44100 10 line
54300 44100 54200 44300 10 line
54200 44300 54100 44100 10 line
54100 44100 54000 44300 10 line
54400 44300 54500 44100 10 line
54500 44100 54550 44200 10 line
54700 44200 54550 44200 10 line
53800 44200 53952 44200 10 line
54001 44300 53950 44200 10 line
grestore
gsave
false false false false 260.000000 [(R9) ] 0 54000 44400 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 54000 43900 180.555557 text
grestore
gsave
48700 42000 48700 42300 10 line
gsave
false false false false 208.000000 [(12) ] 0 48750 42100 144.444443 text
grestore
gsave
true false false false 208.000000 [(R) ] 0 48700 42350 144.444443 text
grestore
47900 42700 48200 42700 10 line
gsave
false true false false 208.000000 [(11) ] 0 48100 42750 144.444443 text
grestore
gsave
false false false false 208.000000 [(K) ] 0 48250 42700 144.444443 text
grestore
47900 43500 48200 43500 10 line
gsave
false true false false 208.000000 [(10) ] 0 48100 43550 144.444443 text
grestore
gsave
false false false false 208.000000 [(J) ] 0 48250 43500 144.444443 text
grestore
47900 43100 48200 43100 10 line
gsave
false true false false 208.000000 [(13) ] 0 48100 43150 144.444443 text
grestore
gsave
false false false false 208.000000 [(CLK) ] 0 48300 43100 144.444443 text
grestore
48300 43100 48200 43175 10 line
48300 43100 48200 43025 10 line
49600 42900 49300 42900 10 line
gsave
false false false false 208.000000 [(15) ] 0 49400 42950 144.444443 text
grestore
gsave
false true false false 208.000000 [(Q) ] 0 49250 42900 144.444443 text
grestore
49600 43300 49400 43300 10 line
gsave
false false false false 208.000000 [(14) ] 0 49400 43350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\\_Q\\_) ] 0 49250 43300 144.444443 text
grestore
49350 43300 50 0 360 10 darc
48700 44200 48700 43900 10 line
gsave
false false false false 208.000000 [(9) ] 0 48750 44000 144.444443 text
grestore
gsave
true false false true 208.000000 [(S) ] 0 48700 43850 144.444443 text
grestore
48200 42300 49300 42300 10 line
49300 42300 49300 43900 10 line
49300 43900 48200 43900 10 line
48200 43900 48200 42300 10 line
gsave
false false false false 260.000000 [(4027) ] 0 48000 42050 180.555557 text
grestore
newpath
47900 42700
25
0 360 arc
fill
newpath
47900 42700
25
0 360 arc
fill
newpath
47900 43100
25
0 360 arc
fill
newpath
47900 43100
25
0 360 arc
fill
grestore
gsave
false true false false 260.000000 [(U2) ] 0 48300 44000 180.555557 text
grestore
gsave
46300 43500 46500 43400 10 line
46500 43400 46300 43300 10 line
46300 43300 46500 43200 10 line
46500 43200 46300 43100 10 line
46300 43500 46500 43600 10 line
46500 43600 46400 43650 10 line
46400 43800 46400 43650 10 line
46400 42900 46400 43052 10 line
46300 43101 46400 43050 10 line
grestore
gsave
false true false true 260.000000 [(R4) ] 0 46800 43500 180.555557 text
grestore
gsave
false true false true 260.000000 [(10k) ] 0 46800 43300 180.555557 text
grestore
gsave
46400 42700 46400 42900 10 line
46300 42700 46500 42700 10 line
46355 42650 46445 42650 10 line
46380 42610 46420 42610 10 line
grestore
49600 43300 50200 43300 10 line
47900 43500 47900 42600 10 line
49700 46300 49500 46300 10 line
gsave
41900 48100 42200 48100 10 line
gsave
false false false false 208.000000 [(2) ] 0 40850 48050 144.444443 text
grestore
41900 48400 42200 48400 10 line
gsave
false false false false 208.000000 [(1) ] 0 40850 48350 144.444443 text
grestore
41900 48400 41000 48400 10 line
41900 48100 41000 48100 10 line
40500 47900 41000 47900 10 line
41000 47900 41000 48600 10 line
41000 48600 40500 48600 10 line
40500 48600 40500 47900 10 line
grestore
gsave
false false false false 260.000000 [(BAT) ] 0 40500 48700 180.555557 text
grestore
42200 47400 42200 48100 10 line
gsave
43800 48300 43800 48500 10 line
43950 48500 43650 48500 10 line
gsave
false true false false 208.000000 [(Vdd) ] 0 43925 48550 144.444443 text
grestore
grestore
43800 48300 43300 48300 10 line
gsave
45300 49100 45300 49300 10 line
45150 49300 45450 49300 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 45175 49350 144.444443 text
grestore
grestore
gsave
46400 44800 46400 45000 10 line
46250 45000 46550 45000 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 46275 45050 144.444443 text
grestore
grestore
gsave
55600 46500 55600 46700 10 line
55450 46700 55750 46700 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 55475 46750 144.444443 text
grestore
grestore
gsave
52600 45900 52600 46100 10 line
52450 46100 52750 46100 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 52475 46150 144.444443 text
grestore
grestore
gsave
49700 46300 49700 46500 10 line
49550 46500 49850 46500 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 49575 46550 144.444443 text
grestore
grestore
gsave
52600 50200 52600 50400 10 line
52450 50400 52750 50400 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 52475 50450 144.444443 text
grestore
grestore
gsave
55600 50200 55600 50400 10 line
55450 50400 55750 50400 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 55475 50450 144.444443 text
grestore
grestore
gsave
43600 48900 43600 49100 10 line
43750 49100 43450 49100 10 line
grestore
gsave
true false false false 260.000000 [(VDD:1) ] 0 43600 49150 180.555557 text
grestore
43600 48900 43600 48300 10 line
42200 48100 42400 48100 10 line
42400 48500 42200 48500 10 line
42200 48500 42200 48400 10 line
gsave
false false false false 260.000000 [(Switch shorts out power rail when off) (to quickly reset the e-stop) ] 0 40900 49400 180.555557 text
grestore
gsave
40900 46300 40900 46100 10 line
gsave
false true false false 208.000000 [(1) ] 270 40950 46150 144.444443 text
grestore
40900 45400 40900 45600 10 line
gsave
false false false false 208.000000 [(2) ] 270 40950 45550 144.444443 text
grestore
41000 45900 40900 45800 10 line
40900 45800 40800 45900 10 line
41000 45900 40800 45900 10 line
41000 45800 40800 45800 10 line
40900 45800 40900 45600 10 line
40900 45900 40900 46100 10 line
40900 45850 200 0 360 10 darc
41203 45784 41304 45683 10 line
41304 45683 41255 45679 10 line
41255 45679 41357 45578 10 line
41118 45816 41218 45715 10 line
41218 45715 41169 45711 10 line
41169 45711 41270 45610 10 line
grestore
gsave
false false false false 260.000000 [(PWR_LED) ] 0 41200 45900 180.555557 text
grestore
gsave
40800 46900 41000 46800 10 line
41000 46800 40800 46700 10 line
40800 46700 41000 46600 10 line
41000 46600 40800 46500 10 line
40800 46900 41000 47000 10 line
41000 47000 40900 47050 10 line
40900 47200 40900 47050 10 line
40900 46300 40900 46452 10 line
40800 46501 40900 46450 10 line
grestore
gsave
false true false true 260.000000 [(R1) ] 0 41400 47000 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 41200 46600 180.555557 text
grestore
gsave
40900 45200 40900 45400 10 line
40800 45200 41000 45200 10 line
40855 45150 40945 45150 10 line
40880 45110 40920 45110 10 line
grestore
gsave
40900 47200 40900 47400 10 line
40750 47400 41050 47400 10 line
gsave
false false false false 208.000000 [(Vdd) ] 0 40775 47450 144.444443 text
grestore
grestore
gsave
47900 42400 47900 42600 10 line
47800 42400 48000 42400 10 line
47855 42350 47945 42350 10 line
47880 42310 47920 42310 10 line
grestore
48700 44200 47500 44200 10 line
47500 44200 47500 43800 10 line
46400 43800 47500 43800 10 line
40400 44900 44200 44900 10 line
44200 44900 44200 50300 10 line
44200 50300 40400 50300 10 line
40400 50300 40400 44900 10 line
gsave
false false false false 260.000000 [(Wireless E-stop Remote) (For ABBY Project) ] 0 50000 40800 180.555557 text
grestore
gsave
false false false false 260.000000 [(remote.sch) ] 0 49900 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 50100 40100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 51600 40100 180.555557 text
grestore
gsave
false false false false 260.000000 [(0) ] 0 53900 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(Edward Venator \(esv@case.edu\)) ] 0 53900 40100 180.555557 text
grestore
gsave
43000 48300 43300 48300 10 line
42700 48500 42400 48500 10 line
42700 48100 42400 48100 10 line
43000 48300 42700 48300 10 line
gsave
false true false false 260.000000 [(1) ] 0 43150 48350 180.555557 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 42550 48550 180.555557 text
grestore
gsave
false true false false 260.000000 [(3) ] 0 42550 48150 180.555557 text
grestore
grestore
gsave
false true false false 260.000000 [(S1) ] 0 42900 48700 180.555557 text
grestore
gsave
48700 41800 48700 42000 10 line
48600 41800 48800 41800 10 line
48655 41750 48745 41750 10 line
48680 41710 48720 41710 10 line
grestore
newpath
45300 49100
25
0 360 arc
fill
newpath
45300 49100
25
0 360 arc
fill
newpath
45300 47500
25
0 360 arc
fill
newpath
45300 45500
25
0 360 arc
fill
newpath
45300 45500
25
0 360 arc
fill
newpath
45300 47500
25
0 360 arc
fill
newpath
45300 47500
25
0 360 arc
fill
newpath
50200 46600
25
0 360 arc
fill
newpath
50200 46600
25
0 360 arc
fill
newpath
50200 46600
25
0 360 arc
fill
newpath
47900 42700
25
0 360 arc
fill
newpath
47900 42700
25
0 360 arc
fill
newpath
47900 43100
25
0 360 arc
fill
newpath
47900 43100
25
0 360 arc
fill
newpath
47900 42700
25
0 360 arc
fill
newpath
47900 43100
25
0 360 arc
fill
newpath
42200 48100
25
0 360 arc
fill
newpath
43600 48300
25
0 360 arc
fill
newpath
43600 48300
25
0 360 arc
fill
newpath
43600 48300
25
0 360 arc
fill
newpath
42200 48100
25
0 360 arc
fill
newpath
46400 43800
25
0 360 arc
fill
showpage
%%End
