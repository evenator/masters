%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Thu Mar 14 17:07:30 2013
%%Title: /home/ed/masters/Electronics/eStop_remote/remote.sch
%%Author: (null)
%%BoundingBox: 0 0 1224 792
%%Orientation: Portrait
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
46600 46400 46300 46400 10 line
gsave
false true false false 234.000000 [(AD0 / DIO0 / Commisioning Button) ] 0 46245 46395 162.500000 text
grestore
gsave
false false false false 260.000000 [(20) ] 0 46395 46445 180.555557 text
grestore
42900 42800 43200 42800 10 line
gsave
false false false false 234.000000 [(GND) ] 0 43255 42795 162.500000 text
grestore
gsave
false true false false 260.000000 [(10) ] 0 43105 42845 180.555557 text
grestore
42900 43200 43200 43200 10 line
gsave
false false false false 234.000000 [(\\_DTR\\_ / SLEEP_RQ / DIO8) ] 0 43255 43195 162.500000 text
grestore
gsave
false true false false 260.000000 [(9) ] 0 43105 43245 180.555557 text
grestore
42900 44000 43200 44000 10 line
gsave
false false false false 234.000000 [(DIO11) ] 0 43255 43995 162.500000 text
grestore
gsave
false true false false 260.000000 [(7) ] 0 43105 44045 180.555557 text
grestore
42900 44400 43200 44400 10 line
gsave
false false false false 234.000000 [(RSSI PWM / DIO10) ] 0 43255 44395 162.500000 text
grestore
gsave
false true false false 260.000000 [(6) ] 0 43105 44445 180.555557 text
grestore
42900 44800 43200 44800 10 line
gsave
false false false false 234.000000 [(\\_RESET\\_) ] 0 43255 44795 162.500000 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 43105 44845 180.555557 text
grestore
42900 45200 43200 45200 10 line
gsave
false false false false 234.000000 [(DIO12) ] 0 43255 45195 162.500000 text
grestore
gsave
false true false false 260.000000 [(4) ] 0 43105 45245 180.555557 text
grestore
42900 43600 43200 43600 10 line
gsave
false false false false 234.000000 [(RESERVED) ] 0 43255 43595 162.500000 text
grestore
gsave
false true false false 260.000000 [(8) ] 0 43105 43645 180.555557 text
grestore
43200 42700 46300 42700 10 line
46300 42700 46300 46600 10 line
46300 46600 43200 46600 10 line
43200 46600 43200 42700 10 line
42900 45600 43200 45600 10 line
gsave
false false false false 234.000000 [(DIN / \\_CONFIG\\_) ] 0 43255 45595 162.500000 text
grestore
gsave
false true false false 260.000000 [(3) ] 0 43105 45645 180.555557 text
grestore
42900 46000 43200 46000 10 line
gsave
false false false false 234.000000 [(DOUT) ] 0 43255 45995 162.500000 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 43105 46045 180.555557 text
grestore
42900 46400 43200 46400 10 line
gsave
false false false false 234.000000 [(VCC) ] 0 43255 46395 162.500000 text
grestore
gsave
false true false false 260.000000 [(1) ] 0 43105 46445 180.555557 text
grestore
46600 46000 46300 46000 10 line
gsave
false true false false 234.000000 [(AD1 / DIO1) ] 0 46245 45995 162.500000 text
grestore
gsave
false false false false 260.000000 [(19) ] 0 46395 46045 180.555557 text
grestore
46600 45600 46300 45600 10 line
gsave
false true false false 234.000000 [(AD2 / DIO2) ] 0 46245 45595 162.500000 text
grestore
gsave
false false false false 260.000000 [(18) ] 0 46395 45645 180.555557 text
grestore
46600 45200 46300 45200 10 line
gsave
false true false false 234.000000 [(AD3 / DIO3) ] 0 46245 45195 162.500000 text
grestore
gsave
false false false false 260.000000 [(17) ] 0 46395 45245 180.555557 text
grestore
46600 44800 46300 44800 10 line
gsave
false true false false 234.000000 [(\\_RTS\\_ / DIO6) ] 0 46245 44795 162.500000 text
grestore
gsave
false false false false 260.000000 [(16) ] 0 46395 44845 180.555557 text
grestore
46600 44400 46300 44400 10 line
gsave
false true false false 234.000000 [(Associate / DIO5) ] 0 46245 44395 162.500000 text
grestore
gsave
false false false false 260.000000 [(15) ] 0 46395 44445 180.555557 text
grestore
46600 44000 46300 44000 10 line
gsave
false true false false 234.000000 [(VREF) ] 0 46245 43995 162.500000 text
grestore
gsave
false false false false 260.000000 [(14) ] 0 46395 44045 180.555557 text
grestore
46600 42800 46300 42800 10 line
gsave
false true false false 234.000000 [(DIO4) ] 0 46245 42795 162.500000 text
grestore
gsave
false false false false 260.000000 [(11) ] 0 46395 42845 180.555557 text
grestore
46600 43200 46300 43200 10 line
gsave
false true false false 234.000000 [(\\_CTS\\_ / DIO7) ] 0 46245 43195 162.500000 text
grestore
gsave
false false false false 260.000000 [(12) ] 0 46395 43245 180.555557 text
grestore
46600 43600 46300 43600 10 line
gsave
false true false false 234.000000 [(ON / \\_SLEEP\\_) ] 0 46245 43595 162.500000 text
grestore
gsave
false false false false 260.000000 [(13) ] 0 46395 43645 180.555557 text
grestore
gsave
false false false false 260.000000 [(XBEE) ] 0 43200 46700 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(U2) ] 0 46095 46700 180.555557 text
grestore
gsave
42500 43500 42500 43700 10 line
42500 44400 42500 44200 10 line
42300 43900 42700 43900 10 line
42300 44000 42700 44000 10 line
42500 44200 42500 44000 10 line
42500 43900 42500 43700 10 line
grestore
gsave
false true false true 260.000000 [(C3) ] 0 42100 44200 180.555557 text
grestore
gsave
false false false false 260.000000 [(0.1uF) ] 0 41700 43800 180.555557 text
grestore
42900 46400 42500 46400 10 line
42500 46400 42500 44400 10 line
41400 42800 42900 42800 10 line
42500 42800 42500 43500 10 line
42900 44800 42500 44800 10 line
gsave
42500 42600 42500 42800 10 line
42400 42600 42600 42600 10 line
42455 42550 42545 42550 10 line
42480 42510 42520 42510 10 line
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
grestore
gsave
54200 47800 54200 47600 10 line
gsave
false true false false 208.000000 [(1) ] 270 54250 47650 144.444443 text
grestore
54200 46900 54200 47100 10 line
gsave
false false false false 208.000000 [(2) ] 270 54250 47050 144.444443 text
grestore
54300 47400 54200 47300 10 line
54200 47300 54100 47400 10 line
54300 47400 54100 47400 10 line
54300 47300 54100 47300 10 line
54200 47300 54200 47100 10 line
54200 47400 54200 47600 10 line
54200 47350 200 0 360 10 darc
54503 47284 54604 47183 10 line
54604 47183 54555 47179 10 line
54555 47179 54657 47078 10 line
54418 47316 54518 47215 10 line
54518 47215 54469 47211 10 line
54469 47211 54570 47110 10 line
grestore
gsave
false false false false 260.000000 [(SOFT_LED) ] 0 54500 47400 180.555557 text
grestore
gsave
54200 45800 54200 46000 10 line
54100 45800 54300 45800 10 line
54155 45750 54245 45750 10 line
54180 45710 54220 45710 10 line
grestore
gsave
53400 44700 53400 44500 10 line
gsave
false true false false 208.000000 [(1) ] 270 53450 44550 144.444443 text
grestore
53400 43800 53400 44000 10 line
gsave
false false false false 208.000000 [(2) ] 270 53450 43950 144.444443 text
grestore
53500 44300 53400 44200 10 line
53400 44200 53300 44300 10 line
53500 44300 53300 44300 10 line
53500 44200 53300 44200 10 line
53400 44200 53400 44000 10 line
53400 44300 53400 44500 10 line
53400 44250 200 0 360 10 darc
53703 44184 53804 44083 10 line
53804 44083 53755 44079 10 line
53755 44079 53857 43978 10 line
53618 44216 53718 44115 10 line
53718 44115 53669 44111 10 line
53669 44111 53770 44010 10 line
grestore
gsave
false false false false 260.000000 [(REM_LED) ] 0 53700 44300 180.555557 text
grestore
gsave
53400 42700 53400 42900 10 line
53300 42700 53500 42700 10 line
53355 42650 53445 42650 10 line
53380 42610 53420 42610 10 line
grestore
gsave
51100 45800 51100 46000 10 line
51000 45800 51200 45800 10 line
51055 45750 51145 45750 10 line
51080 45710 51120 45710 10 line
grestore
gsave
47600 40300 47600 40500 10 line
47500 40300 47700 40300 10 line
47555 40250 47645 40250 10 line
47580 40210 47620 40210 10 line
grestore
50300 46000 46600 46000 10 line
46600 45600 52400 45600 10 line
52400 45600 52400 48300 10 line
46600 45200 52800 45200 10 line
52400 43300 52400 45200 10 line
46600 42800 47000 42800 10 line
gsave
51700 43000 51900 42900 10 line
51900 42900 51700 42800 10 line
51700 42800 51900 42700 10 line
51900 42700 51700 42600 10 line
51700 43000 51900 43100 10 line
51900 43100 51800 43150 10 line
51800 43300 51800 43150 10 line
51800 42400 51800 42552 10 line
51700 42601 51800 42550 10 line
grestore
gsave
false true false true 260.000000 [(R4) ] 0 52200 43000 180.555557 text
grestore
gsave
false true false true 260.000000 [(10k) ] 0 52200 42800 180.555557 text
grestore
gsave
51800 41800 51800 42000 10 line
51700 41800 51900 41800 10 line
51755 41750 51845 41750 10 line
51780 41710 51820 41710 10 line
grestore
51800 43300 52400 43300 10 line
46800 43600 46600 43600 10 line
51800 42000 51800 42400 10 line
gsave
51600 43600 51800 43800 10 line
51800 43800 51800 44100 10 line
gsave
false false false false 208.000000 [(2) ] 90 51750 43950 144.444443 text
grestore
51800 43600 51800 43300 10 line
gsave
false false false false 208.000000 [(1) ] 90 51750 43400 144.444443 text
grestore
grestore
gsave
false true false true 260.000000 [(S2) ] 0 51500 43700 180.555557 text
grestore
gsave
51100 48800 51100 48600 10 line
gsave
false false false false 156.000000 [(3) ] 0 51000 48650 108.333336 text
grestore
51100 48000 51100 47800 10 line
gsave
false false false false 156.000000 [(1) ] 0 51000 47850 108.333336 text
grestore
51000 48301 316 0 360 10 darc
51100 48000 50900 48200 10 line
51100 48600 50900 48400 10 line
50900 48500 50900 48100 10 line
50500 48300 50684 48300 10 line
gsave
false false false false 156.000000 [(2) ] 0 50600 48350 108.333336 text
grestore
50900 48300 50684 48300 10 line
51100 48000 51064 48072 10 line
51100 48000 51028 48036 10 line
51028 48036 51064 48072 10 line
grestore
gsave
false false false false 260.000000 [(Q1) ] 0 51400 48300 180.555557 text
grestore
gsave
51100 47800 51100 47600 10 line
gsave
false true false false 208.000000 [(1) ] 270 51150 47650 144.444443 text
grestore
51100 46900 51100 47100 10 line
gsave
false false false false 208.000000 [(2) ] 270 51150 47050 144.444443 text
grestore
51200 47400 51100 47300 10 line
51100 47300 51000 47400 10 line
51200 47400 51000 47400 10 line
51200 47300 51000 47300 10 line
51100 47300 51100 47100 10 line
51100 47400 51100 47600 10 line
51100 47350 200 0 360 10 darc
51403 47284 51504 47183 10 line
51504 47183 51455 47179 10 line
51455 47179 51557 47078 10 line
51318 47316 51418 47215 10 line
51418 47215 51369 47211 10 line
51369 47211 51470 47110 10 line
grestore
gsave
false false false false 260.000000 [(BUT_LED) ] 0 51400 47400 180.555557 text
grestore
gsave
51000 46600 51200 46500 10 line
51200 46500 51000 46400 10 line
51000 46400 51200 46300 10 line
51200 46300 51000 46200 10 line
51000 46600 51200 46700 10 line
51200 46700 51100 46750 10 line
51100 46900 51100 46750 10 line
51100 46000 51100 46152 10 line
51000 46201 51100 46150 10 line
grestore
gsave
false true false true 260.000000 [(R1) ] 0 51600 46700 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 51400 46300 180.555557 text
grestore
gsave
54100 46600 54300 46500 10 line
54300 46500 54100 46400 10 line
54100 46400 54300 46300 10 line
54300 46300 54100 46200 10 line
54100 46600 54300 46700 10 line
54300 46700 54200 46750 10 line
54200 46900 54200 46750 10 line
54200 46000 54200 46152 10 line
54100 46201 54200 46150 10 line
grestore
gsave
false true false true 260.000000 [(R3) ] 0 54700 46700 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 54500 46300 180.555557 text
grestore
gsave
54200 48800 54200 48600 10 line
gsave
false false false false 156.000000 [(3) ] 0 54100 48650 108.333336 text
grestore
54200 48000 54200 47800 10 line
gsave
false false false false 156.000000 [(1) ] 0 54100 47850 108.333336 text
grestore
54100 48301 316 0 360 10 darc
54200 48000 54000 48200 10 line
54200 48600 54000 48400 10 line
54000 48500 54000 48100 10 line
53600 48300 53784 48300 10 line
gsave
false false false false 156.000000 [(2) ] 0 53700 48350 108.333336 text
grestore
54000 48300 53784 48300 10 line
54200 48000 54164 48072 10 line
54200 48000 54128 48036 10 line
54128 48036 54164 48072 10 line
grestore
gsave
false false false false 260.000000 [(Q3) ] 0 54500 48300 180.555557 text
grestore
50500 48300 50300 48300 10 line
50300 48300 50300 46000 10 line
53600 48300 52400 48300 10 line
gsave
53300 43500 53500 43400 10 line
53500 43400 53300 43300 10 line
53300 43300 53500 43200 10 line
53500 43200 53300 43100 10 line
53300 43500 53500 43600 10 line
53500 43600 53400 43650 10 line
53400 43800 53400 43650 10 line
53400 42900 53400 43052 10 line
53300 43101 53400 43050 10 line
grestore
gsave
false true false true 260.000000 [(R5) ] 0 53900 43600 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 53700 43200 180.555557 text
grestore
gsave
53400 45700 53400 45500 10 line
gsave
false false false false 156.000000 [(3) ] 0 53300 45550 108.333336 text
grestore
53400 44900 53400 44700 10 line
gsave
false false false false 156.000000 [(1) ] 0 53300 44750 108.333336 text
grestore
53300 45201 316 0 360 10 darc
53400 44900 53200 45100 10 line
53400 45500 53200 45300 10 line
53200 45400 53200 45000 10 line
52800 45200 52984 45200 10 line
gsave
false false false false 156.000000 [(2) ] 0 52900 45250 108.333336 text
grestore
53200 45200 52984 45200 10 line
53400 44900 53364 44972 10 line
53400 44900 53328 44936 10 line
53328 44936 53364 44972 10 line
grestore
gsave
false false false false 260.000000 [(Q4) ] 0 53700 45200 180.555557 text
grestore
gsave
47500 42000 47700 41900 10 line
47700 41900 47500 41800 10 line
47500 41800 47700 41700 10 line
47700 41700 47500 41600 10 line
47500 42000 47700 42100 10 line
47700 42100 47600 42150 10 line
47600 42300 47600 42150 10 line
47600 41400 47600 41552 10 line
47500 41601 47600 41550 10 line
grestore
gsave
false true false true 260.000000 [(R2) ] 0 48100 42100 180.555557 text
grestore
gsave
false false false false 260.000000 [(47) ] 0 47900 41700 180.555557 text
grestore
gsave
47600 41400 47600 41200 10 line
gsave
false true false false 208.000000 [(1) ] 270 47650 41250 144.444443 text
grestore
47600 40500 47600 40700 10 line
gsave
false false false false 208.000000 [(2) ] 270 47650 40650 144.444443 text
grestore
47700 41000 47600 40900 10 line
47600 40900 47500 41000 10 line
47700 41000 47500 41000 10 line
47700 40900 47500 40900 10 line
47600 40900 47600 40700 10 line
47600 41000 47600 41200 10 line
47600 40950 200 0 360 10 darc
47903 40884 48004 40783 10 line
48004 40783 47955 40779 10 line
47955 40779 48057 40678 10 line
47818 40916 47918 40815 10 line
47918 40815 47869 40811 10 line
47869 40811 47970 40710 10 line
grestore
gsave
false false false false 260.000000 [(IRC5_LED) ] 0 46500 40900 180.555557 text
grestore
gsave
47600 43300 47600 43100 10 line
gsave
false false false false 156.000000 [(3) ] 0 47500 43150 108.333336 text
grestore
47600 42500 47600 42300 10 line
gsave
false false false false 156.000000 [(1) ] 0 47500 42350 108.333336 text
grestore
47500 42801 316 0 360 10 darc
47600 42500 47400 42700 10 line
47600 43100 47400 42900 10 line
47400 43000 47400 42600 10 line
47000 42800 47184 42800 10 line
gsave
false false false false 156.000000 [(2) ] 0 47100 42850 108.333336 text
grestore
47400 42800 47184 42800 10 line
47600 42500 47564 42572 10 line
47600 42500 47528 42536 10 line
47528 42536 47564 42572 10 line
grestore
gsave
false false false false 260.000000 [(Q2) ] 0 47900 42800 180.555557 text
grestore
gsave
false false false false 260.000000 [(Note:) (S2 must be a normally-closed ) (push-twist style emergency stop button) ] 0 48100 44200 180.555557 text
grestore
gsave
45800 48300 47900 48300 10 line
47900 48300 47900 49500 10 line
47900 49500 45800 49500 10 line
45800 49500 45800 48300 10 line
45500 49100 45800 49100 10 line
gsave
false false false false 260.000000 [(LX) ] 0 45855 49095 180.555557 text
grestore
gsave
false true false false 260.000000 [(5) ] 0 45705 49145 180.555557 text
grestore
45500 48700 45800 48700 10 line
gsave
false false false false 260.000000 [(GND) ] 0 45855 48695 180.555557 text
grestore
gsave
false true false false 260.000000 [(4) ] 0 45705 48745 180.555557 text
grestore
48200 49300 47900 49300 10 line
gsave
false true false false 260.000000 [(OUT) ] 0 47845 49295 180.555557 text
grestore
gsave
false false false false 260.000000 [(2) ] 0 47995 49345 180.555557 text
grestore
48200 48900 47900 48900 10 line
gsave
false true false false 260.000000 [(CE) ] 0 47845 48895 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 47995 48945 180.555557 text
grestore
48200 48500 47900 48500 10 line
gsave
false true false false 260.000000 [(NC) ] 0 47845 48495 180.555557 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 47995 48545 180.555557 text
grestore
gsave
false false false false 260.000000 [(NCP1402) ] 0 47100 49600 180.555557 text
grestore
newpath
48200 49300
25
0 360 arc
fill
newpath
48200 49300
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(U1) ] 0 45795 49600 180.555557 text
grestore
gsave
45500 47700 45500 47900 10 line
45400 47700 45600 47700 10 line
45455 47650 45545 47650 10 line
45480 47610 45520 47610 10 line
grestore
48200 48900 48200 50300 10 line
gsave
45500 49100 45350 49100 10 line
44600 49100 44750 49100 10 line
44837 49100 75 0 180 10 darc
44979 49100 75 0 180 10 darc
45121 49100 75 0 180 10 darc
45263 49100 75 0 180 10 darc
45338 49100 45350 49100 10 line
44750 49100 44762 49100 10 line
44908 49100 4 180 360 10 darc
45050 49100 4 180 360 10 darc
45192 49100 4 180 360 10 darc
grestore
gsave
false false false false 260.000000 [(L1) ] 0 44800 49500 180.555557 text
grestore
gsave
false false false false 260.000000 [(47uH) ] 0 44800 49300 180.555557 text
grestore
gsave
46700 50500 46700 50100 10 line
46700 50500 47000 50300 10 line
47000 50300 46700 50100 10 line
47000 50500 47000 50100 10 line
46400 50300 46600 50300 10 line
47300 50300 47100 50300 10 line
47100 50300 47000 50300 10 line
46700 50300 46600 50300 10 line
47050 50500 50 0 180 10 darc
46950 50100 50 180 360 10 darc
grestore
gsave
false false false false 260.000000 [(D1) ] 0 46700 50600 180.555557 text
grestore
46400 50300 45500 50300 10 line
45500 50300 45500 49100 10 line
47300 50300 49000 50300 10 line
45500 47900 45500 48700 10 line
44600 48200 44600 48100 10 line
44600 48100 45500 48100 10 line
49000 50300 49000 50000 10 line
gsave
49000 48900 49000 49100 10 line
48900 48900 49100 48900 10 line
48955 48850 49045 48850 10 line
48980 48810 49020 48810 10 line
grestore
gsave
49000 50300 49000 50500 10 line
48850 50500 49150 50500 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 48875 50550 144.444443 text
grestore
grestore
gsave
49000 50000 49000 49800 10 line
gsave
false true false false 208.000000 [(1) ] 270 49050 49850 144.444443 text
grestore
49000 49100 49000 49300 10 line
gsave
false false false false 208.000000 [(2) ] 270 49050 49250 144.444443 text
grestore
49200 49600 48800 49600 10 line
49000 49300 49000 49500 10 line
49000 49600 49000 49800 10 line
49000 48800 700 75 105 10 darc
49200 49711 49100 49711 10 line
49149 49660 49149 49760 10 line
grestore
gsave
false false false false 260.000000 [(C4) ] 0 49300 49500 180.555557 text
grestore
gsave
false false false false 260.000000 [(47uF) ] 0 49300 49300 180.555557 text
grestore
gsave
44600 49100 44600 48900 10 line
gsave
false true false false 208.000000 [(1) ] 270 44650 48950 144.444443 text
grestore
44600 48200 44600 48400 10 line
gsave
false false false false 208.000000 [(2) ] 270 44650 48350 144.444443 text
grestore
44800 48700 44400 48700 10 line
44600 48400 44600 48600 10 line
44600 48700 44600 48900 10 line
44600 47900 700 75 105 10 darc
44800 48811 44700 48811 10 line
44749 48760 44749 48860 10 line
grestore
gsave
false false false false 260.000000 [(C1) ] 0 44000 48700 180.555557 text
grestore
gsave
false false false false 260.000000 [(47uF) ] 0 43900 48400 180.555557 text
grestore
gsave
42400 48300 42700 48300 10 line
gsave
false false false false 208.000000 [(2) ] 0 41350 48250 144.444443 text
grestore
42400 48600 42700 48600 10 line
gsave
false false false false 208.000000 [(1) ] 0 41350 48550 144.444443 text
grestore
42400 48600 41500 48600 10 line
42400 48300 41500 48300 10 line
41000 48100 41500 48100 10 line
41500 48100 41500 48800 10 line
41500 48800 41000 48800 10 line
41000 48800 41000 48100 10 line
grestore
gsave
false false false false 260.000000 [(BAT) ] 0 41000 48900 180.555557 text
grestore
gsave
43000 48600 42700 48600 10 line
gsave
false false false false 260.000000 [(1) ] 0 42850 48650 180.555557 text
grestore
43300 48800 43600 48800 10 line
gsave
false false false false 260.000000 [(2) ] 0 43450 48850 180.555557 text
grestore
43300 48400 43600 48400 10 line
gsave
false false false false 260.000000 [(3) ] 0 43450 48450 180.555557 text
grestore
43000 48600 43300 48600 10 line
grestore
gsave
false false false false 260.000000 [(S1) ] 0 43100 49000 180.555557 text
grestore
gsave
42700 48100 42700 48300 10 line
42600 48100 42800 48100 10 line
42655 48050 42745 48050 10 line
42680 48010 42720 48010 10 line
grestore
gsave
54200 48800 54200 49000 10 line
54050 49000 54350 49000 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 54075 49050 144.444443 text
grestore
grestore
gsave
51100 48800 51100 49000 10 line
50950 49000 51250 49000 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 50975 49050 144.444443 text
grestore
grestore
gsave
42500 46400 42500 46600 10 line
42350 46600 42650 46600 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 42375 46650 144.444443 text
grestore
grestore
gsave
47600 43300 47600 43500 10 line
47450 43500 47750 43500 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 47475 43550 144.444443 text
grestore
grestore
gsave
51800 44100 51800 44300 10 line
51650 44300 51950 44300 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 51675 44350 144.444443 text
grestore
grestore
gsave
53400 45700 53400 45900 10 line
53250 45900 53550 45900 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 53275 45950 144.444443 text
grestore
grestore
44600 49100 43600 49100 10 line
43600 49100 43600 48800 10 line
gsave
false false false false 260.000000 [(Wireless Emergency Stop Remote) (for ABBY Project) ] 0 50100 40800 180.555557 text
grestore
gsave
false false false false 260.000000 [(remote.sch) ] 0 50000 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 50400 40100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 51800 40100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 53900 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(Edward Venator \(esv@case.edu\)) ] 0 53900 40100 180.555557 text
grestore
gsave
41400 43500 41400 43700 10 line
41400 44400 41400 44200 10 line
41200 43900 41600 43900 10 line
41200 44000 41600 44000 10 line
41400 44200 41400 44000 10 line
41400 43900 41400 43700 10 line
grestore
gsave
false true false true 260.000000 [(C2) ] 0 41000 44200 180.555557 text
grestore
gsave
false false false false 260.000000 [(10pF) ] 0 40600 43800 180.555557 text
grestore
gsave
false false false false 260.000000 [(Layout Notes:) (* C2 and C3 should be placed close to U2) (* Trace lengths in power supply circuit should be minimized) ] 0 40500 40700 180.555557 text
grestore
gsave
false false false false 260.000000 [(Power Supply \(3.3v Boost\)) ] 0 41600 50300 180.555557 text
grestore
40800 47500 49800 47500 10 line
49800 47500 49800 50900 10 line
49800 50900 40800 50900 10 line
40800 50900 40800 47500 10 line
42500 44800 41400 44800 10 line
41400 44800 41400 44400 10 line
41400 43500 41400 42800 10 line
gsave
46800 43600 46800 43800 10 line
46650 43800 46950 43800 10 line
gsave
false false false false 208.000000 [(+3.3V) ] 0 46675 43850 144.444443 text
grestore
grestore
newpath
42500 46400
25
0 360 arc
fill
newpath
42500 46400
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
42500 42800
25
0 360 arc
fill
newpath
52400 45200
25
0 360 arc
fill
newpath
52400 45200
25
0 360 arc
fill
newpath
52400 45200
25
0 360 arc
fill
newpath
51800 43300
25
0 360 arc
fill
newpath
48200 49300
25
0 360 arc
fill
newpath
48200 49300
25
0 360 arc
fill
newpath
48200 50300
25
0 360 arc
fill
newpath
48200 49300
25
0 360 arc
fill
newpath
48200 50300
25
0 360 arc
fill
newpath
45500 49100
25
0 360 arc
fill
newpath
49000 50300
25
0 360 arc
fill
newpath
48200 50300
25
0 360 arc
fill
newpath
45500 48100
25
0 360 arc
fill
newpath
45500 48100
25
0 360 arc
fill
newpath
45500 48100
25
0 360 arc
fill
newpath
49000 50300
25
0 360 arc
fill
newpath
44600 49100
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
newpath
42500 44800
25
0 360 arc
fill
showpage
%%End
